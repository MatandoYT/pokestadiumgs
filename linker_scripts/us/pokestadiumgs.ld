SECTIONS
{
    __romPos = 0;
    _gp = 0x0;
    header_ROM_START = __romPos;
    header_VRAM = ADDR(.header);
    .header 0x0 : AT(header_ROM_START) SUBALIGN(16)
    {
        FILL(0x00000000);
        header_DATA_START = .;
        header = .;
        build/asm/us/header.o(.data);
        header_DATA_END = .;
        header_DATA_SIZE = ABSOLUTE(header_DATA_END - header_DATA_START);
    }
    __romPos += SIZEOF(.header);
    header_ROM_END = __romPos;
    header_VRAM_END = .;

    boot_ROM_START = __romPos;
    boot_VRAM = ADDR(.boot);
    .boot 0xA4000040 : AT(boot_ROM_START) SUBALIGN(16)
    {
        FILL(0x00000000);
        boot_TEXT_START = .;
        build/asm/us/boot.o(.text);
        boot_TEXT_END = .;
        boot_TEXT_SIZE = ABSOLUTE(boot_TEXT_END - boot_TEXT_START);
        boot_DATA_START = .;
        boot = .;
        build/asm/us/boot.o(.data);
        bootcode_font = .;
        build/assets/us/bootcode_font.o(.data);
        boot_DATA_END = .;
        boot_DATA_SIZE = ABSOLUTE(boot_DATA_END - boot_DATA_START);
        boot_RODATA_START = .;
        build/asm/us/boot.o(.rodata);
        boot_RODATA_END = .;
        boot_RODATA_SIZE = ABSOLUTE(boot_RODATA_END - boot_RODATA_START);
    }
    boot_bss_VRAM = ADDR(.boot_bss);
    .boot_bss (NOLOAD) : SUBALIGN(16)
    {
        FILL(0x00000000);
        boot_BSS_START = .;
        build/asm/us/boot.o(.bss);
        boot_BSS_END = .;
        boot_BSS_SIZE = ABSOLUTE(boot_BSS_END - boot_BSS_START);
    }
    __romPos += SIZEOF(.boot);
    boot_ROM_END = __romPos;
    boot_VRAM_END = .;
    __romPos = ALIGN(__romPos, 16);
    . = ALIGN(., 16);

    text_ROM_START = __romPos;
    text_VRAM = ADDR(.text);
    .text 0x80000400 : AT(text_ROM_START) SUBALIGN(16)
    {
        FILL(0x00000000);
        text_TEXT_START = .;
        build/asm/us/entry.o(.text);
        build/asm/us/pre_main.o(.text);
        build/asm/us/main.o(.text);
        build/asm/us/21C0.o(.text);
        build/asm/us/2CA0.o(.text);
        build/asm/us/3280.o(.text);
        build/asm/us/3A00.o(.text);
        build/asm/us/3E40.o(.text);
        build/asm/us/4420.o(.text);
        build/asm/us/57C0.o(.text);
        build/asm/us/62E0.o(.text);
        build/asm/us/6670.o(.text);
        build/asm/us/7140.o(.text);
        build/asm/us/78D0.o(.text);
        build/asm/us/7A50.o(.text);
        build/asm/us/8470.o(.text);
        build/asm/us/95C0.o(.text);
        build/asm/us/9E00.o(.text);
        build/asm/us/AC80.o(.text);
        build/asm/us/BF50.o(.text);
        build/asm/us/C180.o(.text);
        build/asm/us/C290.o(.text);
        build/asm/us/C2A0.o(.text);
        build/asm/us/C2C0.o(.text);
        build/asm/us/C380.o(.text);
        build/asm/us/C890.o(.text);
        build/asm/us/CE80.o(.text);
        build/asm/us/10BB0.o(.text);
        build/asm/us/14640.o(.text);
        build/asm/us/1A140.o(.text);
        build/asm/us/1A360.o(.text);
        build/asm/us/1C2D0.o(.text);
        build/asm/us/1CDC0.o(.text);
        build/asm/us/20860.o(.text);
        build/asm/us/208A0.o(.text);
        build/asm/us/20C50.o(.text);
        build/asm/us/43700.o(.text);
        build/asm/us/44300.o(.text);
        build/asm/us/44E70.o(.text);
        build/asm/us/47580.o(.text);
        build/asm/us/4AAD0.o(.text);
        build/asm/us/4AC10.o(.text);
        build/asm/us/4C2E0.o(.text);
        build/asm/us/4CC20.o(.text);
        build/asm/us/4EE50.o(.text);
        build/asm/us/4F800.o(.text);
        build/asm/us/517E0.o(.text);
        build/asm/us/56F90.o(.text);
        build/asm/us/585D0.o(.text);
        build/asm/us/615D0.o(.text);
        build/asm/us/638E0.o(.text);
        build/asm/us/63CF0.o(.text);
        build/asm/us/641E0.o(.text);
        build/asm/us/654A0.o(.text);
        build/asm/us/65820.o(.text);
        build/asm/us/65E20.o(.text);
        build/asm/us/667B0.o(.text);
        build/asm/us/66990.o(.text);
        build/asm/us/66B50.o(.text);
        build/asm/us/66DF0.o(.text);
        build/asm/us/672F0.o(.text);
        build/asm/us/674C0.o(.text);
        build/asm/us/674D0.o(.text);
        build/asm/us/67F00.o(.text);
        build/asm/us/68F90.o(.text);
        build/asm/us/69650.o(.text);
        build/asm/us/69F70.o(.text);
        build/asm/us/6AA10.o(.text);
        build/asm/us/6AA80.o(.text);
        build/asm/us/6DDA0.o(.text);
        build/asm/us/6DEC0.o(.text);
        build/asm/us/6E850.o(.text);
        build/asm/us/71E10.o(.text);
        build/asm/us/72540.o(.text);
        build/asm/us/72720.o(.text);
        build/asm/us/728D0.o(.text);
        build/asm/us/72C30.o(.text);
        build/asm/us/73C80.o(.text);
        build/asm/us/74020.o(.text);
        build/asm/us/746D0.o(.text);
        build/asm/us/74820.o(.text);
        build/asm/us/74A20.o(.text);
        build/asm/us/74B70.o(.text);
        build/asm/us/74FF0.o(.text);
        build/asm/us/75100.o(.text);
        build/asm/us/761E0.o(.text);
        build/asm/us/76230.o(.text);
        build/asm/us/762D0.o(.text);
        build/asm/us/76760.o(.text);
        build/asm/us/76B50.o(.text);
        build/asm/us/76D60.o(.text);
        build/asm/us/77120.o(.text);
        build/asm/us/771B0.o(.text);
        build/asm/us/77670.o(.text);
        build/asm/us/77C20.o(.text);
        build/asm/us/77C60.o(.text);
        build/asm/us/77D80.o(.text);
        build/asm/us/77F10.o(.text);
        build/asm/us/77FA0.o(.text);
        build/asm/us/78180.o(.text);
        build/asm/us/78210.o(.text);
        build/asm/us/78290.o(.text);
        build/asm/us/782B0.o(.text);
        build/asm/us/78330.o(.text);
        build/asm/us/78790.o(.text);
        build/asm/us/78A20.o(.text);
        build/asm/us/78AB0.o(.text);
        build/asm/us/78B60.o(.text);
        build/asm/us/78BB0.o(.text);
        build/asm/us/78EC0.o(.text);
        build/asm/us/78F30.o(.text);
        build/asm/us/78F80.o(.text);
        build/asm/us/78FD0.o(.text);
        build/asm/us/79510.o(.text);
        build/asm/us/79640.o(.text);
        build/asm/us/796B0.o(.text);
        build/asm/us/79750.o(.text);
        build/asm/us/798B0.o(.text);
        text_TEXT_END = .;
        text_TEXT_SIZE = ABSOLUTE(text_TEXT_END - text_TEXT_START);
        text_DATA_START = .;
        entry = .;
        build/asm/us/entry.o(.data);
        pre_main = .;
        build/asm/us/pre_main.o(.data);
        main = .;
        build/asm/us/main.o(.data);
        _21C0 = .;
        build/asm/us/21C0.o(.data);
        _2CA0 = .;
        build/asm/us/2CA0.o(.data);
        _3280 = .;
        build/asm/us/3280.o(.data);
        _3A00 = .;
        build/asm/us/3A00.o(.data);
        _3E40 = .;
        build/asm/us/3E40.o(.data);
        _4420 = .;
        build/asm/us/4420.o(.data);
        _57C0 = .;
        build/asm/us/57C0.o(.data);
        _62E0 = .;
        build/asm/us/62E0.o(.data);
        _6670 = .;
        build/asm/us/6670.o(.data);
        _7140 = .;
        build/asm/us/7140.o(.data);
        _78D0 = .;
        build/asm/us/78D0.o(.data);
        _7A50 = .;
        build/asm/us/7A50.o(.data);
        _8470 = .;
        build/asm/us/8470.o(.data);
        _95C0 = .;
        build/asm/us/95C0.o(.data);
        _9E00 = .;
        build/asm/us/9E00.o(.data);
        AC80 = .;
        build/asm/us/AC80.o(.data);
        BF50 = .;
        build/asm/us/BF50.o(.data);
        C180 = .;
        build/asm/us/C180.o(.data);
        C290 = .;
        build/asm/us/C290.o(.data);
        C2A0 = .;
        build/asm/us/C2A0.o(.data);
        C2C0 = .;
        build/asm/us/C2C0.o(.data);
        C380 = .;
        build/asm/us/C380.o(.data);
        C890 = .;
        build/asm/us/C890.o(.data);
        CE80 = .;
        build/asm/us/CE80.o(.data);
        _10BB0 = .;
        build/asm/us/10BB0.o(.data);
        _14640 = .;
        build/asm/us/14640.o(.data);
        _1A140 = .;
        build/asm/us/1A140.o(.data);
        _1A360 = .;
        build/asm/us/1A360.o(.data);
        _1C2D0 = .;
        build/asm/us/1C2D0.o(.data);
        _1CDC0 = .;
        build/asm/us/1CDC0.o(.data);
        _20860 = .;
        build/asm/us/20860.o(.data);
        _208A0 = .;
        build/asm/us/208A0.o(.data);
        _20C50 = .;
        build/asm/us/20C50.o(.data);
        _43700 = .;
        build/asm/us/43700.o(.data);
        _44300 = .;
        build/asm/us/44300.o(.data);
        _44E70 = .;
        build/asm/us/44E70.o(.data);
        _47580 = .;
        build/asm/us/47580.o(.data);
        _4AAD0 = .;
        build/asm/us/4AAD0.o(.data);
        _4AC10 = .;
        build/asm/us/4AC10.o(.data);
        _4C2E0 = .;
        build/asm/us/4C2E0.o(.data);
        _4CC20 = .;
        build/asm/us/4CC20.o(.data);
        _4EE50 = .;
        build/asm/us/4EE50.o(.data);
        _4F800 = .;
        build/asm/us/4F800.o(.data);
        _517E0 = .;
        build/asm/us/517E0.o(.data);
        _56F90 = .;
        build/asm/us/56F90.o(.data);
        _585D0 = .;
        build/asm/us/585D0.o(.data);
        _615D0 = .;
        build/asm/us/615D0.o(.data);
        _638E0 = .;
        build/asm/us/638E0.o(.data);
        _63CF0 = .;
        build/asm/us/63CF0.o(.data);
        _641E0 = .;
        build/asm/us/641E0.o(.data);
        _654A0 = .;
        build/asm/us/654A0.o(.data);
        _65820 = .;
        build/asm/us/65820.o(.data);
        _65E20 = .;
        build/asm/us/65E20.o(.data);
        _667B0 = .;
        build/asm/us/667B0.o(.data);
        _66990 = .;
        build/asm/us/66990.o(.data);
        _66B50 = .;
        build/asm/us/66B50.o(.data);
        _66DF0 = .;
        build/asm/us/66DF0.o(.data);
        _672F0 = .;
        build/asm/us/672F0.o(.data);
        _674C0 = .;
        build/asm/us/674C0.o(.data);
        _674D0 = .;
        build/asm/us/674D0.o(.data);
        _67F00 = .;
        build/asm/us/67F00.o(.data);
        _68F90 = .;
        build/asm/us/68F90.o(.data);
        _69650 = .;
        build/asm/us/69650.o(.data);
        _69F70 = .;
        build/asm/us/69F70.o(.data);
        _6AA10 = .;
        build/asm/us/6AA10.o(.data);
        _6AA80 = .;
        build/asm/us/6AA80.o(.data);
        _6DDA0 = .;
        build/asm/us/6DDA0.o(.data);
        _6DEC0 = .;
        build/asm/us/6DEC0.o(.data);
        _6E850 = .;
        build/asm/us/6E850.o(.data);
        _71E10 = .;
        build/asm/us/71E10.o(.data);
        _72540 = .;
        build/asm/us/72540.o(.data);
        _72720 = .;
        build/asm/us/72720.o(.data);
        _728D0 = .;
        build/asm/us/728D0.o(.data);
        _72C30 = .;
        build/asm/us/72C30.o(.data);
        _73C80 = .;
        build/asm/us/73C80.o(.data);
        _74020 = .;
        build/asm/us/74020.o(.data);
        _746D0 = .;
        build/asm/us/746D0.o(.data);
        _74820 = .;
        build/asm/us/74820.o(.data);
        _74A20 = .;
        build/asm/us/74A20.o(.data);
        _74B70 = .;
        build/asm/us/74B70.o(.data);
        _74FF0 = .;
        build/asm/us/74FF0.o(.data);
        _75100 = .;
        build/asm/us/75100.o(.data);
        _761E0 = .;
        build/asm/us/761E0.o(.data);
        _76230 = .;
        build/asm/us/76230.o(.data);
        _762D0 = .;
        build/asm/us/762D0.o(.data);
        _76760 = .;
        build/asm/us/76760.o(.data);
        _76B50 = .;
        build/asm/us/76B50.o(.data);
        _76D60 = .;
        build/asm/us/76D60.o(.data);
        _77120 = .;
        build/asm/us/77120.o(.data);
        _771B0 = .;
        build/asm/us/771B0.o(.data);
        _77670 = .;
        build/asm/us/77670.o(.data);
        _77C20 = .;
        build/asm/us/77C20.o(.data);
        _77C60 = .;
        build/asm/us/77C60.o(.data);
        _77D80 = .;
        build/asm/us/77D80.o(.data);
        _77F10 = .;
        build/asm/us/77F10.o(.data);
        _77FA0 = .;
        build/asm/us/77FA0.o(.data);
        _78180 = .;
        build/asm/us/78180.o(.data);
        _78210 = .;
        build/asm/us/78210.o(.data);
        _78290 = .;
        build/asm/us/78290.o(.data);
        _782B0 = .;
        build/asm/us/782B0.o(.data);
        _78330 = .;
        build/asm/us/78330.o(.data);
        _78790 = .;
        build/asm/us/78790.o(.data);
        _78A20 = .;
        build/asm/us/78A20.o(.data);
        _78AB0 = .;
        build/asm/us/78AB0.o(.data);
        _78B60 = .;
        build/asm/us/78B60.o(.data);
        _78BB0 = .;
        build/asm/us/78BB0.o(.data);
        _78EC0 = .;
        build/asm/us/78EC0.o(.data);
        _78F30 = .;
        build/asm/us/78F30.o(.data);
        _78F80 = .;
        build/asm/us/78F80.o(.data);
        _78FD0 = .;
        build/asm/us/78FD0.o(.data);
        _79510 = .;
        build/asm/us/79510.o(.data);
        _79640 = .;
        build/asm/us/79640.o(.data);
        _796B0 = .;
        build/asm/us/796B0.o(.data);
        _79750 = .;
        build/asm/us/79750.o(.data);
        _798B0 = .;
        build/asm/us/798B0.o(.data);
        _85DA0_data = .;
        build/asm/us/data/85DA0.data.o(.data);
        A8600 = .;
        build/assets/us/A8600.o(.data);
        text_DATA_END = .;
        text_DATA_SIZE = ABSOLUTE(text_DATA_END - text_DATA_START);
        text_RODATA_START = .;
        build/asm/us/entry.o(.rodata);
        build/asm/us/pre_main.o(.rodata);
        build/asm/us/main.o(.rodata);
        build/asm/us/21C0.o(.rodata);
        build/asm/us/2CA0.o(.rodata);
        build/asm/us/3280.o(.rodata);
        build/asm/us/3A00.o(.rodata);
        build/asm/us/3E40.o(.rodata);
        build/asm/us/4420.o(.rodata);
        build/asm/us/57C0.o(.rodata);
        build/asm/us/62E0.o(.rodata);
        build/asm/us/6670.o(.rodata);
        build/asm/us/7140.o(.rodata);
        build/asm/us/78D0.o(.rodata);
        build/asm/us/7A50.o(.rodata);
        build/asm/us/8470.o(.rodata);
        build/asm/us/95C0.o(.rodata);
        build/asm/us/9E00.o(.rodata);
        build/asm/us/AC80.o(.rodata);
        build/asm/us/BF50.o(.rodata);
        build/asm/us/C180.o(.rodata);
        build/asm/us/C290.o(.rodata);
        build/asm/us/C2A0.o(.rodata);
        build/asm/us/C2C0.o(.rodata);
        build/asm/us/C380.o(.rodata);
        build/asm/us/C890.o(.rodata);
        build/asm/us/CE80.o(.rodata);
        build/asm/us/10BB0.o(.rodata);
        build/asm/us/14640.o(.rodata);
        build/asm/us/1A140.o(.rodata);
        build/asm/us/1A360.o(.rodata);
        build/asm/us/1C2D0.o(.rodata);
        build/asm/us/1CDC0.o(.rodata);
        build/asm/us/20860.o(.rodata);
        build/asm/us/208A0.o(.rodata);
        build/asm/us/20C50.o(.rodata);
        build/asm/us/43700.o(.rodata);
        build/asm/us/44300.o(.rodata);
        build/asm/us/44E70.o(.rodata);
        build/asm/us/47580.o(.rodata);
        build/asm/us/4AAD0.o(.rodata);
        build/asm/us/4AC10.o(.rodata);
        build/asm/us/4C2E0.o(.rodata);
        build/asm/us/4CC20.o(.rodata);
        build/asm/us/4EE50.o(.rodata);
        build/asm/us/4F800.o(.rodata);
        build/asm/us/517E0.o(.rodata);
        build/asm/us/56F90.o(.rodata);
        build/asm/us/585D0.o(.rodata);
        build/asm/us/615D0.o(.rodata);
        build/asm/us/638E0.o(.rodata);
        build/asm/us/63CF0.o(.rodata);
        build/asm/us/641E0.o(.rodata);
        build/asm/us/654A0.o(.rodata);
        build/asm/us/65820.o(.rodata);
        build/asm/us/65E20.o(.rodata);
        build/asm/us/667B0.o(.rodata);
        build/asm/us/66990.o(.rodata);
        build/asm/us/66B50.o(.rodata);
        build/asm/us/66DF0.o(.rodata);
        build/asm/us/672F0.o(.rodata);
        build/asm/us/674C0.o(.rodata);
        build/asm/us/674D0.o(.rodata);
        build/asm/us/67F00.o(.rodata);
        build/asm/us/68F90.o(.rodata);
        build/asm/us/69650.o(.rodata);
        build/asm/us/69F70.o(.rodata);
        build/asm/us/6AA10.o(.rodata);
        build/asm/us/6AA80.o(.rodata);
        build/asm/us/6DDA0.o(.rodata);
        build/asm/us/6DEC0.o(.rodata);
        build/asm/us/6E850.o(.rodata);
        build/asm/us/71E10.o(.rodata);
        build/asm/us/72540.o(.rodata);
        build/asm/us/72720.o(.rodata);
        build/asm/us/728D0.o(.rodata);
        build/asm/us/72C30.o(.rodata);
        build/asm/us/73C80.o(.rodata);
        build/asm/us/74020.o(.rodata);
        build/asm/us/746D0.o(.rodata);
        build/asm/us/74820.o(.rodata);
        build/asm/us/74A20.o(.rodata);
        build/asm/us/74B70.o(.rodata);
        build/asm/us/74FF0.o(.rodata);
        build/asm/us/75100.o(.rodata);
        build/asm/us/761E0.o(.rodata);
        build/asm/us/76230.o(.rodata);
        build/asm/us/762D0.o(.rodata);
        build/asm/us/76760.o(.rodata);
        build/asm/us/76B50.o(.rodata);
        build/asm/us/76D60.o(.rodata);
        build/asm/us/77120.o(.rodata);
        build/asm/us/771B0.o(.rodata);
        build/asm/us/77670.o(.rodata);
        build/asm/us/77C20.o(.rodata);
        build/asm/us/77C60.o(.rodata);
        build/asm/us/77D80.o(.rodata);
        build/asm/us/77F10.o(.rodata);
        build/asm/us/77FA0.o(.rodata);
        build/asm/us/78180.o(.rodata);
        build/asm/us/78210.o(.rodata);
        build/asm/us/78290.o(.rodata);
        build/asm/us/782B0.o(.rodata);
        build/asm/us/78330.o(.rodata);
        build/asm/us/78790.o(.rodata);
        build/asm/us/78A20.o(.rodata);
        build/asm/us/78AB0.o(.rodata);
        build/asm/us/78B60.o(.rodata);
        build/asm/us/78BB0.o(.rodata);
        build/asm/us/78EC0.o(.rodata);
        build/asm/us/78F30.o(.rodata);
        build/asm/us/78F80.o(.rodata);
        build/asm/us/78FD0.o(.rodata);
        build/asm/us/79510.o(.rodata);
        build/asm/us/79640.o(.rodata);
        build/asm/us/796B0.o(.rodata);
        build/asm/us/79750.o(.rodata);
        build/asm/us/798B0.o(.rodata);
        text_RODATA_END = .;
        text_RODATA_SIZE = ABSOLUTE(text_RODATA_END - text_RODATA_START);
    }
    text_bss_VRAM = ADDR(.text_bss);
    .text_bss (NOLOAD) : SUBALIGN(16)
    {
        FILL(0x00000000);
        text_BSS_START = .;
        build/asm/us/entry.o(.bss);
        build/asm/us/pre_main.o(.bss);
        build/asm/us/main.o(.bss);
        build/asm/us/21C0.o(.bss);
        build/asm/us/2CA0.o(.bss);
        build/asm/us/3280.o(.bss);
        build/asm/us/3A00.o(.bss);
        build/asm/us/3E40.o(.bss);
        build/asm/us/4420.o(.bss);
        build/asm/us/57C0.o(.bss);
        build/asm/us/62E0.o(.bss);
        build/asm/us/6670.o(.bss);
        build/asm/us/7140.o(.bss);
        build/asm/us/78D0.o(.bss);
        build/asm/us/7A50.o(.bss);
        build/asm/us/8470.o(.bss);
        build/asm/us/95C0.o(.bss);
        build/asm/us/9E00.o(.bss);
        build/asm/us/AC80.o(.bss);
        build/asm/us/BF50.o(.bss);
        build/asm/us/C180.o(.bss);
        build/asm/us/C290.o(.bss);
        build/asm/us/C2A0.o(.bss);
        build/asm/us/C2C0.o(.bss);
        build/asm/us/C380.o(.bss);
        build/asm/us/C890.o(.bss);
        build/asm/us/CE80.o(.bss);
        build/asm/us/10BB0.o(.bss);
        build/asm/us/14640.o(.bss);
        build/asm/us/1A140.o(.bss);
        build/asm/us/1A360.o(.bss);
        build/asm/us/1C2D0.o(.bss);
        build/asm/us/1CDC0.o(.bss);
        build/asm/us/20860.o(.bss);
        build/asm/us/208A0.o(.bss);
        build/asm/us/20C50.o(.bss);
        build/asm/us/43700.o(.bss);
        build/asm/us/44300.o(.bss);
        build/asm/us/44E70.o(.bss);
        build/asm/us/47580.o(.bss);
        build/asm/us/4AAD0.o(.bss);
        build/asm/us/4AC10.o(.bss);
        build/asm/us/4C2E0.o(.bss);
        build/asm/us/4CC20.o(.bss);
        build/asm/us/4EE50.o(.bss);
        build/asm/us/4F800.o(.bss);
        build/asm/us/517E0.o(.bss);
        build/asm/us/56F90.o(.bss);
        build/asm/us/585D0.o(.bss);
        build/asm/us/615D0.o(.bss);
        build/asm/us/638E0.o(.bss);
        build/asm/us/63CF0.o(.bss);
        build/asm/us/641E0.o(.bss);
        build/asm/us/654A0.o(.bss);
        build/asm/us/65820.o(.bss);
        build/asm/us/65E20.o(.bss);
        build/asm/us/667B0.o(.bss);
        build/asm/us/66990.o(.bss);
        build/asm/us/66B50.o(.bss);
        build/asm/us/66DF0.o(.bss);
        build/asm/us/672F0.o(.bss);
        build/asm/us/674C0.o(.bss);
        build/asm/us/674D0.o(.bss);
        build/asm/us/67F00.o(.bss);
        build/asm/us/68F90.o(.bss);
        build/asm/us/69650.o(.bss);
        build/asm/us/69F70.o(.bss);
        build/asm/us/6AA10.o(.bss);
        build/asm/us/6AA80.o(.bss);
        build/asm/us/6DDA0.o(.bss);
        build/asm/us/6DEC0.o(.bss);
        build/asm/us/6E850.o(.bss);
        build/asm/us/71E10.o(.bss);
        build/asm/us/72540.o(.bss);
        build/asm/us/72720.o(.bss);
        build/asm/us/728D0.o(.bss);
        build/asm/us/72C30.o(.bss);
        build/asm/us/73C80.o(.bss);
        build/asm/us/74020.o(.bss);
        build/asm/us/746D0.o(.bss);
        build/asm/us/74820.o(.bss);
        build/asm/us/74A20.o(.bss);
        build/asm/us/74B70.o(.bss);
        build/asm/us/74FF0.o(.bss);
        build/asm/us/75100.o(.bss);
        build/asm/us/761E0.o(.bss);
        build/asm/us/76230.o(.bss);
        build/asm/us/762D0.o(.bss);
        build/asm/us/76760.o(.bss);
        build/asm/us/76B50.o(.bss);
        build/asm/us/76D60.o(.bss);
        build/asm/us/77120.o(.bss);
        build/asm/us/771B0.o(.bss);
        build/asm/us/77670.o(.bss);
        build/asm/us/77C20.o(.bss);
        build/asm/us/77C60.o(.bss);
        build/asm/us/77D80.o(.bss);
        build/asm/us/77F10.o(.bss);
        build/asm/us/77FA0.o(.bss);
        build/asm/us/78180.o(.bss);
        build/asm/us/78210.o(.bss);
        build/asm/us/78290.o(.bss);
        build/asm/us/782B0.o(.bss);
        build/asm/us/78330.o(.bss);
        build/asm/us/78790.o(.bss);
        build/asm/us/78A20.o(.bss);
        build/asm/us/78AB0.o(.bss);
        build/asm/us/78B60.o(.bss);
        build/asm/us/78BB0.o(.bss);
        build/asm/us/78EC0.o(.bss);
        build/asm/us/78F30.o(.bss);
        build/asm/us/78F80.o(.bss);
        build/asm/us/78FD0.o(.bss);
        build/asm/us/79510.o(.bss);
        build/asm/us/79640.o(.bss);
        build/asm/us/796B0.o(.bss);
        build/asm/us/79750.o(.bss);
        build/asm/us/798B0.o(.bss);
        text_BSS_END = .;
        text_BSS_SIZE = ABSOLUTE(text_BSS_END - text_BSS_START);
    }
    __romPos += SIZEOF(.text);
    text_ROM_END = __romPos;
    text_VRAM_END = .;
    __romPos = ALIGN(__romPos, 16);
    . = ALIGN(., 16);

    fragment1_ROM_START = __romPos;
    fragment1_VRAM = ADDR(.fragment1);
    .fragment1 0x83500000 : AT(fragment1_ROM_START) SUBALIGN(16)
    {
        FILL(0x00000000);
        fragment1_TEXT_START = .;
        build/asm/us/fragments/1/fragment1_header.o(.text);
        build/asm/us/fragments/1/fragment1_code.o(.text);
        fragment1_TEXT_END = .;
        fragment1_TEXT_SIZE = ABSOLUTE(fragment1_TEXT_END - fragment1_TEXT_START);
        fragment1_DATA_START = .;
        fragments_1_fragment1_header = .;
        build/asm/us/fragments/1/fragment1_header.o(.data);
        fragments_1_fragment1_code = .;
        build/asm/us/fragments/1/fragment1_code.o(.data);
        fragments_1_fragment1_data_data = .;
        build/asm/us/data/fragments/1/fragment1_data.data.o(.data);
        fragment1_DATA_END = .;
        fragment1_DATA_SIZE = ABSOLUTE(fragment1_DATA_END - fragment1_DATA_START);
        fragment1_RODATA_START = .;
        build/asm/us/fragments/1/fragment1_header.o(.rodata);
        build/asm/us/fragments/1/fragment1_code.o(.rodata);
        fragment1_RODATA_END = .;
        fragment1_RODATA_SIZE = ABSOLUTE(fragment1_RODATA_END - fragment1_RODATA_START);
    }
    fragment1_bss_VRAM = ADDR(.fragment1_bss);
    .fragment1_bss (NOLOAD) : SUBALIGN(16)
    {
        FILL(0x00000000);
        fragment1_BSS_START = .;
        build/asm/us/fragments/1/fragment1_header.o(.bss);
        build/asm/us/fragments/1/fragment1_code.o(.bss);
        fragment1_BSS_END = .;
        fragment1_BSS_SIZE = ABSOLUTE(fragment1_BSS_END - fragment1_BSS_START);
    }
    __romPos += SIZEOF(.fragment1);
    fragment1_ROM_END = __romPos;
    fragment1_VRAM_END = .;
    __romPos = ALIGN(__romPos, 16);
    . = ALIGN(., 16);

    fragment2_ROM_START = __romPos;
    fragment2_VRAM = ADDR(.fragment2);
    .fragment2 0x81900000 : AT(fragment2_ROM_START) SUBALIGN(16)
    {
        FILL(0x00000000);
        fragment2_TEXT_START = .;
        build/asm/us/fragments/2/fragment2_header.o(.text);
        build/asm/us/fragments/2/fragment2_code.o(.text);
        fragment2_TEXT_END = .;
        fragment2_TEXT_SIZE = ABSOLUTE(fragment2_TEXT_END - fragment2_TEXT_START);
        fragment2_DATA_START = .;
        fragments_2_fragment2_header = .;
        build/asm/us/fragments/2/fragment2_header.o(.data);
        fragments_2_fragment2_code = .;
        build/asm/us/fragments/2/fragment2_code.o(.data);
        fragments_2_fragment2_data_data = .;
        build/asm/us/data/fragments/2/fragment2_data.data.o(.data);
        fragment2_DATA_END = .;
        fragment2_DATA_SIZE = ABSOLUTE(fragment2_DATA_END - fragment2_DATA_START);
        fragment2_RODATA_START = .;
        build/asm/us/fragments/2/fragment2_header.o(.rodata);
        build/asm/us/fragments/2/fragment2_code.o(.rodata);
        fragment2_RODATA_END = .;
        fragment2_RODATA_SIZE = ABSOLUTE(fragment2_RODATA_END - fragment2_RODATA_START);
    }
    fragment2_bss_VRAM = ADDR(.fragment2_bss);
    .fragment2_bss (NOLOAD) : SUBALIGN(16)
    {
        FILL(0x00000000);
        fragment2_BSS_START = .;
        build/asm/us/fragments/2/fragment2_header.o(.bss);
        build/asm/us/fragments/2/fragment2_code.o(.bss);
        fragment2_BSS_END = .;
        fragment2_BSS_SIZE = ABSOLUTE(fragment2_BSS_END - fragment2_BSS_START);
    }
    __romPos += SIZEOF(.fragment2);
    fragment2_ROM_END = __romPos;
    fragment2_VRAM_END = .;
    __romPos = ALIGN(__romPos, 16);
    . = ALIGN(., 16);

    fragment3_ROM_START = __romPos;
    fragment3_VRAM = ADDR(.fragment3);
    .fragment3 0x81A00000 : AT(fragment3_ROM_START) SUBALIGN(16)
    {
        FILL(0x00000000);
        fragment3_TEXT_START = .;
        build/asm/us/fragments/3/fragment3_header.o(.text);
        build/asm/us/fragments/3/fragment3_code.o(.text);
        fragment3_TEXT_END = .;
        fragment3_TEXT_SIZE = ABSOLUTE(fragment3_TEXT_END - fragment3_TEXT_START);
        fragment3_DATA_START = .;
        fragments_3_fragment3_header = .;
        build/asm/us/fragments/3/fragment3_header.o(.data);
        fragments_3_fragment3_code = .;
        build/asm/us/fragments/3/fragment3_code.o(.data);
        fragments_3_fragment3_data_data = .;
        build/asm/us/data/fragments/3/fragment3_data.data.o(.data);
        fragment3_DATA_END = .;
        fragment3_DATA_SIZE = ABSOLUTE(fragment3_DATA_END - fragment3_DATA_START);
        fragment3_RODATA_START = .;
        build/asm/us/fragments/3/fragment3_header.o(.rodata);
        build/asm/us/fragments/3/fragment3_code.o(.rodata);
        fragment3_RODATA_END = .;
        fragment3_RODATA_SIZE = ABSOLUTE(fragment3_RODATA_END - fragment3_RODATA_START);
    }
    fragment3_bss_VRAM = ADDR(.fragment3_bss);
    .fragment3_bss (NOLOAD) : SUBALIGN(16)
    {
        FILL(0x00000000);
        fragment3_BSS_START = .;
        build/asm/us/fragments/3/fragment3_header.o(.bss);
        build/asm/us/fragments/3/fragment3_code.o(.bss);
        fragment3_BSS_END = .;
        fragment3_BSS_SIZE = ABSOLUTE(fragment3_BSS_END - fragment3_BSS_START);
    }
    __romPos += SIZEOF(.fragment3);
    fragment3_ROM_END = __romPos;
    fragment3_VRAM_END = .;
    __romPos = ALIGN(__romPos, 16);
    . = ALIGN(., 16);

    fragment4_ROM_START = __romPos;
    fragment4_VRAM = ADDR(.fragment4);
    .fragment4 0x81800000 : AT(fragment4_ROM_START) SUBALIGN(16)
    {
        FILL(0x00000000);
        fragment4_TEXT_START = .;
        build/asm/us/fragments/4/fragment4_header.o(.text);
        build/asm/us/fragments/4/fragment4_code.o(.text);
        fragment4_TEXT_END = .;
        fragment4_TEXT_SIZE = ABSOLUTE(fragment4_TEXT_END - fragment4_TEXT_START);
        fragment4_DATA_START = .;
        fragments_4_fragment4_header = .;
        build/asm/us/fragments/4/fragment4_header.o(.data);
        fragments_4_fragment4_code = .;
        build/asm/us/fragments/4/fragment4_code.o(.data);
        fragments_4_fragment4_data_data = .;
        build/asm/us/data/fragments/4/fragment4_data.data.o(.data);
        fragment4_DATA_END = .;
        fragment4_DATA_SIZE = ABSOLUTE(fragment4_DATA_END - fragment4_DATA_START);
        fragment4_RODATA_START = .;
        build/asm/us/fragments/4/fragment4_header.o(.rodata);
        build/asm/us/fragments/4/fragment4_code.o(.rodata);
        fragment4_RODATA_END = .;
        fragment4_RODATA_SIZE = ABSOLUTE(fragment4_RODATA_END - fragment4_RODATA_START);
    }
    fragment4_bss_VRAM = ADDR(.fragment4_bss);
    .fragment4_bss (NOLOAD) : SUBALIGN(16)
    {
        FILL(0x00000000);
        fragment4_BSS_START = .;
        build/asm/us/fragments/4/fragment4_header.o(.bss);
        build/asm/us/fragments/4/fragment4_code.o(.bss);
        fragment4_BSS_END = .;
        fragment4_BSS_SIZE = ABSOLUTE(fragment4_BSS_END - fragment4_BSS_START);
    }
    __romPos += SIZEOF(.fragment4);
    fragment4_ROM_END = __romPos;
    fragment4_VRAM_END = .;
    __romPos = ALIGN(__romPos, 16);
    . = ALIGN(., 16);

    fragment5_ROM_START = __romPos;
    fragment5_VRAM = ADDR(.fragment5);
    .fragment5 0x83200000 : AT(fragment5_ROM_START) SUBALIGN(16)
    {
        FILL(0x00000000);
        fragment5_TEXT_START = .;
        build/asm/us/fragments/5/fragment5_header.o(.text);
        build/asm/us/fragments/5/fragment5_code.o(.text);
        fragment5_TEXT_END = .;
        fragment5_TEXT_SIZE = ABSOLUTE(fragment5_TEXT_END - fragment5_TEXT_START);
        fragment5_DATA_START = .;
        fragments_5_fragment5_header = .;
        build/asm/us/fragments/5/fragment5_header.o(.data);
        fragments_5_fragment5_code = .;
        build/asm/us/fragments/5/fragment5_code.o(.data);
        fragments_5_fragment5_data_data = .;
        build/asm/us/data/fragments/5/fragment5_data.data.o(.data);
        fragment5_DATA_END = .;
        fragment5_DATA_SIZE = ABSOLUTE(fragment5_DATA_END - fragment5_DATA_START);
        fragment5_RODATA_START = .;
        build/asm/us/fragments/5/fragment5_header.o(.rodata);
        build/asm/us/fragments/5/fragment5_code.o(.rodata);
        fragment5_RODATA_END = .;
        fragment5_RODATA_SIZE = ABSOLUTE(fragment5_RODATA_END - fragment5_RODATA_START);
    }
    fragment5_bss_VRAM = ADDR(.fragment5_bss);
    .fragment5_bss (NOLOAD) : SUBALIGN(16)
    {
        FILL(0x00000000);
        fragment5_BSS_START = .;
        build/asm/us/fragments/5/fragment5_header.o(.bss);
        build/asm/us/fragments/5/fragment5_code.o(.bss);
        fragment5_BSS_END = .;
        fragment5_BSS_SIZE = ABSOLUTE(fragment5_BSS_END - fragment5_BSS_START);
    }
    __romPos += SIZEOF(.fragment5);
    fragment5_ROM_END = __romPos;
    fragment5_VRAM_END = .;
    __romPos = ALIGN(__romPos, 16);
    . = ALIGN(., 16);

    fragment6_ROM_START = __romPos;
    fragment6_VRAM = ADDR(.fragment6);
    .fragment6 0x83100000 : AT(fragment6_ROM_START) SUBALIGN(16)
    {
        FILL(0x00000000);
        fragment6_TEXT_START = .;
        build/asm/us/fragments/6/fragment6_header.o(.text);
        build/asm/us/fragments/6/fragment6_code.o(.text);
        fragment6_TEXT_END = .;
        fragment6_TEXT_SIZE = ABSOLUTE(fragment6_TEXT_END - fragment6_TEXT_START);
        fragment6_DATA_START = .;
        fragments_6_fragment6_header = .;
        build/asm/us/fragments/6/fragment6_header.o(.data);
        fragments_6_fragment6_code = .;
        build/asm/us/fragments/6/fragment6_code.o(.data);
        fragments_6_fragment6_data_data = .;
        build/asm/us/data/fragments/6/fragment6_data.data.o(.data);
        fragment6_DATA_END = .;
        fragment6_DATA_SIZE = ABSOLUTE(fragment6_DATA_END - fragment6_DATA_START);
        fragment6_RODATA_START = .;
        build/asm/us/fragments/6/fragment6_header.o(.rodata);
        build/asm/us/fragments/6/fragment6_code.o(.rodata);
        fragment6_RODATA_END = .;
        fragment6_RODATA_SIZE = ABSOLUTE(fragment6_RODATA_END - fragment6_RODATA_START);
    }
    fragment6_bss_VRAM = ADDR(.fragment6_bss);
    .fragment6_bss (NOLOAD) : SUBALIGN(16)
    {
        FILL(0x00000000);
        fragment6_BSS_START = .;
        build/asm/us/fragments/6/fragment6_header.o(.bss);
        build/asm/us/fragments/6/fragment6_code.o(.bss);
        fragment6_BSS_END = .;
        fragment6_BSS_SIZE = ABSOLUTE(fragment6_BSS_END - fragment6_BSS_START);
    }
    __romPos += SIZEOF(.fragment6);
    fragment6_ROM_END = __romPos;
    fragment6_VRAM_END = .;
    __romPos = ALIGN(__romPos, 16);
    . = ALIGN(., 16);

    fragment7_ROM_START = __romPos;
    fragment7_VRAM = ADDR(.fragment7);
    .fragment7 0x83000000 : AT(fragment7_ROM_START) SUBALIGN(16)
    {
        FILL(0x00000000);
        fragment7_TEXT_START = .;
        build/asm/us/fragments/7/fragment7_header.o(.text);
        build/asm/us/fragments/7/fragment7_code.o(.text);
        fragment7_TEXT_END = .;
        fragment7_TEXT_SIZE = ABSOLUTE(fragment7_TEXT_END - fragment7_TEXT_START);
        fragment7_DATA_START = .;
        fragments_7_fragment7_header = .;
        build/asm/us/fragments/7/fragment7_header.o(.data);
        fragments_7_fragment7_code = .;
        build/asm/us/fragments/7/fragment7_code.o(.data);
        fragments_7_fragment7_data_data = .;
        build/asm/us/data/fragments/7/fragment7_data.data.o(.data);
        fragment7_DATA_END = .;
        fragment7_DATA_SIZE = ABSOLUTE(fragment7_DATA_END - fragment7_DATA_START);
        fragment7_RODATA_START = .;
        build/asm/us/fragments/7/fragment7_header.o(.rodata);
        build/asm/us/fragments/7/fragment7_code.o(.rodata);
        fragment7_RODATA_END = .;
        fragment7_RODATA_SIZE = ABSOLUTE(fragment7_RODATA_END - fragment7_RODATA_START);
    }
    fragment7_bss_VRAM = ADDR(.fragment7_bss);
    .fragment7_bss (NOLOAD) : SUBALIGN(16)
    {
        FILL(0x00000000);
        fragment7_BSS_START = .;
        build/asm/us/fragments/7/fragment7_header.o(.bss);
        build/asm/us/fragments/7/fragment7_code.o(.bss);
        fragment7_BSS_END = .;
        fragment7_BSS_SIZE = ABSOLUTE(fragment7_BSS_END - fragment7_BSS_START);
    }
    __romPos += SIZEOF(.fragment7);
    fragment7_ROM_END = __romPos;
    fragment7_VRAM_END = .;
    __romPos = ALIGN(__romPos, 16);
    . = ALIGN(., 16);

    fragment8_ROM_START = __romPos;
    fragment8_VRAM = ADDR(.fragment8);
    .fragment8 0x82F00000 : AT(fragment8_ROM_START) SUBALIGN(16)
    {
        FILL(0x00000000);
        fragment8_TEXT_START = .;
        build/asm/us/fragments/8/fragment8_header.o(.text);
        build/asm/us/fragments/8/fragment8_code.o(.text);
        fragment8_TEXT_END = .;
        fragment8_TEXT_SIZE = ABSOLUTE(fragment8_TEXT_END - fragment8_TEXT_START);
        fragment8_DATA_START = .;
        fragments_8_fragment8_header = .;
        build/asm/us/fragments/8/fragment8_header.o(.data);
        fragments_8_fragment8_code = .;
        build/asm/us/fragments/8/fragment8_code.o(.data);
        fragments_8_fragment8_data_data = .;
        build/asm/us/data/fragments/8/fragment8_data.data.o(.data);
        fragment8_DATA_END = .;
        fragment8_DATA_SIZE = ABSOLUTE(fragment8_DATA_END - fragment8_DATA_START);
        fragment8_RODATA_START = .;
        build/asm/us/fragments/8/fragment8_header.o(.rodata);
        build/asm/us/fragments/8/fragment8_code.o(.rodata);
        fragment8_RODATA_END = .;
        fragment8_RODATA_SIZE = ABSOLUTE(fragment8_RODATA_END - fragment8_RODATA_START);
    }
    fragment8_bss_VRAM = ADDR(.fragment8_bss);
    .fragment8_bss (NOLOAD) : SUBALIGN(16)
    {
        FILL(0x00000000);
        fragment8_BSS_START = .;
        build/asm/us/fragments/8/fragment8_header.o(.bss);
        build/asm/us/fragments/8/fragment8_code.o(.bss);
        fragment8_BSS_END = .;
        fragment8_BSS_SIZE = ABSOLUTE(fragment8_BSS_END - fragment8_BSS_START);
    }
    __romPos += SIZEOF(.fragment8);
    fragment8_ROM_END = __romPos;
    fragment8_VRAM_END = .;
    __romPos = ALIGN(__romPos, 16);
    . = ALIGN(., 16);

    fragment9_ROM_START = __romPos;
    fragment9_VRAM = ADDR(.fragment9);
    .fragment9 0x8FB00000 : AT(fragment9_ROM_START) SUBALIGN(16)
    {
        FILL(0x00000000);
        fragment9_TEXT_START = .;
        build/asm/us/fragments/9/fragment9_header.o(.text);
        build/asm/us/fragments/9/fragment9_code.o(.text);
        fragment9_TEXT_END = .;
        fragment9_TEXT_SIZE = ABSOLUTE(fragment9_TEXT_END - fragment9_TEXT_START);
        fragment9_DATA_START = .;
        fragments_9_fragment9_header = .;
        build/asm/us/fragments/9/fragment9_header.o(.data);
        fragments_9_fragment9_code = .;
        build/asm/us/fragments/9/fragment9_code.o(.data);
        fragments_9_fragment9_data_data = .;
        build/asm/us/data/fragments/9/fragment9_data.data.o(.data);
        fragment9_DATA_END = .;
        fragment9_DATA_SIZE = ABSOLUTE(fragment9_DATA_END - fragment9_DATA_START);
        fragment9_RODATA_START = .;
        build/asm/us/fragments/9/fragment9_header.o(.rodata);
        build/asm/us/fragments/9/fragment9_code.o(.rodata);
        fragment9_RODATA_END = .;
        fragment9_RODATA_SIZE = ABSOLUTE(fragment9_RODATA_END - fragment9_RODATA_START);
    }
    fragment9_bss_VRAM = ADDR(.fragment9_bss);
    .fragment9_bss (NOLOAD) : SUBALIGN(16)
    {
        FILL(0x00000000);
        fragment9_BSS_START = .;
        build/asm/us/fragments/9/fragment9_header.o(.bss);
        build/asm/us/fragments/9/fragment9_code.o(.bss);
        fragment9_BSS_END = .;
        fragment9_BSS_SIZE = ABSOLUTE(fragment9_BSS_END - fragment9_BSS_START);
    }
    __romPos += SIZEOF(.fragment9);
    fragment9_ROM_END = __romPos;
    fragment9_VRAM_END = .;
    __romPos = ALIGN(__romPos, 16);
    . = ALIGN(., 16);

    fragment10_ROM_START = __romPos;
    fragment10_VRAM = ADDR(.fragment10);
    .fragment10 0x82800000 : AT(fragment10_ROM_START) SUBALIGN(16)
    {
        FILL(0x00000000);
        fragment10_TEXT_START = .;
        build/asm/us/fragments/10/fragment10_header.o(.text);
        build/asm/us/fragments/10/fragment10_code.o(.text);
        fragment10_TEXT_END = .;
        fragment10_TEXT_SIZE = ABSOLUTE(fragment10_TEXT_END - fragment10_TEXT_START);
        fragment10_DATA_START = .;
        fragments_10_fragment10_header = .;
        build/asm/us/fragments/10/fragment10_header.o(.data);
        fragments_10_fragment10_code = .;
        build/asm/us/fragments/10/fragment10_code.o(.data);
        fragment10_DATA_END = .;
        fragment10_DATA_SIZE = ABSOLUTE(fragment10_DATA_END - fragment10_DATA_START);
        fragment10_RODATA_START = .;
        build/asm/us/fragments/10/fragment10_header.o(.rodata);
        build/asm/us/fragments/10/fragment10_code.o(.rodata);
        fragment10_RODATA_END = .;
        fragment10_RODATA_SIZE = ABSOLUTE(fragment10_RODATA_END - fragment10_RODATA_START);
    }
    fragment10_bss_VRAM = ADDR(.fragment10_bss);
    .fragment10_bss (NOLOAD) : SUBALIGN(16)
    {
        FILL(0x00000000);
        fragment10_BSS_START = .;
        build/asm/us/fragments/10/fragment10_header.o(.bss);
        build/asm/us/fragments/10/fragment10_code.o(.bss);
        fragment10_BSS_END = .;
        fragment10_BSS_SIZE = ABSOLUTE(fragment10_BSS_END - fragment10_BSS_START);
    }
    __romPos += SIZEOF(.fragment10);
    fragment10_ROM_END = __romPos;
    fragment10_VRAM_END = .;
    __romPos = ALIGN(__romPos, 16);
    . = ALIGN(., 16);

    D7BA0_ROM_START = __romPos;
    D7BA0_VRAM = ADDR(.D7BA0);
    .D7BA0 : AT(D7BA0_ROM_START) SUBALIGN(16)
    {
        FILL(0x00000000);
        D7BA0_DATA_START = .;
        D7BA0 = .;
        build/assets/us/D7BA0.o(.data);
        D7BA0_DATA_END = .;
        D7BA0_DATA_SIZE = ABSOLUTE(D7BA0_DATA_END - D7BA0_DATA_START);
    }
    __romPos += SIZEOF(.D7BA0);
    D7BA0_ROM_END = __romPos;
    D7BA0_VRAM_END = .;

    _437600_ROM_START = __romPos;
    _437600_VRAM = ADDR(._437600);
    ._437600 : AT(_437600_ROM_START) SUBALIGN(16)
    {
        FILL(0x00000000);
        _437600_DATA_START = .;
        _437600 = .;
        build/assets/us/437600.o(.data);
        _437600_DATA_END = .;
        _437600_DATA_SIZE = ABSOLUTE(_437600_DATA_END - _437600_DATA_START);
    }
    __romPos += SIZEOF(._437600);
    _437600_ROM_END = __romPos;
    _437600_VRAM_END = .;

    /DISCARD/ :
    {
        *(*);
    }
}
